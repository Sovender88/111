# utils/ui_components.py ‚Äî –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã Streamlit

import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from utils.io_tools import save_dataframe
from utils.analysis_tools import (
    show_missing_values,
    show_column_summary,
    check_duplicates
)
from utils.globals import saved_plots, plot_descriptions
from config import DATA_PATHS


def render_data_exploration_ui(df: pd.DataFrame):
    """–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö"""
    if df is None or df.empty:
        st.warning("üì≠ –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")
        return

    if st.button("üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è"):
        show_missing_values(df)

    feature = st.selectbox("üìå –ü—Ä–∏–∑–Ω–∞–∫ –¥–ª—è –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—ã", df.select_dtypes(include=[np.number]).columns)

    if st.button("üìä –ü–æ—Å—Ç—Ä–æ–∏—Ç—å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ", key="btn_dist"):
        fig, ax = plt.subplots()
        sns.histplot(df[feature], kde=True, ax=ax, color='skyblue')
        ax.set_title(f"–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: {feature}")
        st.pyplot(fig)
        fig.savefig("plots/distribution.png")
        saved_plots.append("plots/distribution.png")
        plot_descriptions.append(f"–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–∞ {feature}")
        plt.close(fig)

    if st.button("üìã –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤", key="btn_summary"):
        show_column_summary(df)

    if st.button("üîÅ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã", key="btn_dup"):
        check_duplicates(df)

    if st.button("üßπ –£–¥–∞–ª–∏—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã", key="btn_drop_dup"):
        df_clean = df.drop_duplicates()
        st.session_state.df_clean = df_clean
        st.success(f"‚úÖ –î—É–±–ª–∏–∫–∞—Ç—ã —É–¥–∞–ª–µ–Ω—ã. –†–∞–∑–º–µ—Ä: {df_clean.shape}")
        save_dataframe(df_clean, DATA_PATHS["processed"])


def render_clustering_visuals(df: pd.DataFrame, clusters: np.ndarray):
    """–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏–∏"""
    numeric_cols = df.select_dtypes(include=[np.number]).columns.drop("–ö–ª–∞—Å—Ç–µ—Ä", errors="ignore")

    st.subheader("üìà –î–∏–∞–≥—Ä–∞–º–º–∞ —Ä–∞—Å—Å–µ—è–Ω–∏—è")
    x = st.selectbox("–û—Å—å X", numeric_cols, key="scatter_x")
    y = st.selectbox("–û—Å—å Y", numeric_cols, key="scatter_y")
    if st.button("üìç –ü–æ—Å—Ç—Ä–æ–∏—Ç—å scatter plot"):
        fig, ax = plt.subplots()
        sns.scatterplot(data=df, x=x, y=y, hue=clusters, palette="deep", ax=ax, s=100)
        ax.set_title(f"–ö–ª–∞—Å—Ç–µ—Ä—ã: {x} vs {y}")
        st.pyplot(fig)
        fig.savefig("plots/cluster_scatter.png")
        saved_plots.append("plots/cluster_scatter.png")
        plot_descriptions.append(f"Scatter plot: {x} vs {y}")
        plt.close(fig)

    st.subheader("üéØ Box plot –ø–æ –∫–ª–∞—Å—Ç–µ—Ä–∞–º")
    feat = st.selectbox("–ü—Ä–∏–∑–Ω–∞–∫", numeric_cols, key="boxplot_feat")
    if st.button("üì¶ –ü–æ—Å—Ç—Ä–æ–∏—Ç—å box plot"):
        df_plot = df.copy()
        df_plot["–ö–ª–∞—Å—Ç–µ—Ä"] = clusters
        fig, ax = plt.subplots()
        sns.boxplot(x="–ö–ª–∞—Å—Ç–µ—Ä", y=feat, data=df_plot, ax=ax, palette="Set2")
        st.pyplot(fig)
        fig.savefig("plots/cluster_boxplot.png")
        saved_plots.append("plots/cluster_boxplot.png")
        plot_descriptions.append(f"Box plot –ø–æ –∫–ª–∞—Å—Ç–µ—Ä–∞–º –¥–ª—è {feat}")
        plt.close(fig)

    st.subheader("üìä –ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ –∫–ª–∞—Å—Ç–µ—Ä–æ–≤")
    if st.button("üìâ –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—É –∫–ª–∞—Å—Ç–µ—Ä–æ–≤"):
        fig, ax = plt.subplots()
        sns.countplot(x=clusters, palette="Set1", ax=ax)
        ax.set_title("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–ª–∞—Å—Ç–µ—Ä–∞–º")
        st.pyplot(fig)
        fig.savefig("plots/cluster_histogram.png")
        saved_plots.append("plots/cluster_histogram.png")
        plot_descriptions.append("–ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ –∫–ª–∞—Å—Ç–µ—Ä–æ–≤")
        plt.close(fig)
